# .github/workflows/deploy.yml

# Name of the workflow
name: Build and Deploy to Server

# Trigger: Run this workflow on every push to the 'main' branch
on:
  push:
    branches: [ "main" ]

# Define environment variables to avoid repetition
env:
  # Replace with your GitHub username and repository name
  IMAGE_NAME: ghcr.io/jardahrazdera/portfolio-jaroslav-tech

jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to the GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} # This is an auto-generated token

      # 3. Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build from the root of the repository
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest # Tag the image

      # 4. Deploy to the server via SSH
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the correct directory
            cd /opt/stacks/3-apps/jaroslav.tech
            # Update the image name in the .env file (optional but good practice)
            # This part is commented out for now to keep it simple
            # sed -i "s|IMAGE_NAME=.*|IMAGE_NAME=${{ env.IMAGE_NAME }}:latest|" .env
            # Pull the new image from GHCR
            docker compose pull app
            # Restart the application service
            docker compose up -d --no-deps app
