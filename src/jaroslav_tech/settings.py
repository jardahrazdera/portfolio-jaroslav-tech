"""
Django settings for jaroslav_tech project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# ---
# SECURITY WARNING: keep the secret key used in production secret!
# Reading the secret key from an environment variable for security.
# ---
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# ---
# SECURITY WARNING: don't run with debug turned on in production!
# Read the debug setting from an environment variable.
# It should be '1' for development and '0' for production.
# ---
DEBUG = os.environ.get('DJANGO_DEBUG', '0') == '1'


# ---
# Read allowed hosts from an environment variable.
# This should be a comma-separated string like "jaroslav.tech,www.jaroslav.tech"
# ---
ALLOWED_HOSTS_ENV = os.environ.get('DJANGO_ALLOWED_HOSTS')
if ALLOWED_HOSTS_ENV:
    ALLOWED_HOSTS = [host.strip() for host in ALLOWED_HOSTS_ENV.split(',')]
else:
    ALLOWED_HOSTS = []


# ---
# CSRF Trusted Origins
# Need to tell Django which domains are allowed to make POST requests
# when running behind a reverse proxy with HTTPS.
# ---
CSRF_TRUSTED_ORIGINS = ['https://jaroslav.tech', 'https://www.jaroslav.tech']

# Force Django to read ID=1 from database
SITE_ID = 1


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    'django_extensions',
    'django_recaptcha',  # django-recaptcha
    'django_ckeditor_5',  # django-ckeditor-5
    'core.apps.CoreConfig',
    'devtracker.apps.DevtrackerConfig',
    'blog.apps.BlogConfig',
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'blog.middleware.PostViewTrackingMiddleware',
    'blog.middleware.ReadingAnalyticsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'jaroslav_tech.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.site_settings',
                'core.context_processors.seo_defaults',
            ],
        },
    },
]

WSGI_APPLICATION = 'jaroslav_tech.wsgi.application'


# ---
# Database configuration
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# Replacing the default SQLite configuration with PostgreSQL,
# reading all connection details from environment variables.
# ---
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': os.environ.get('POSTGRES_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', 'English'),
    ('cs', 'Czech'),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# ---
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# ---
STATIC_URL = 'static/'

# This is the directory where `collectstatic` will gather all static files
# for production deployment.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# This setting defines the additional locations the staticfiles app will traverse.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR.parent, 'frontend', 'node_modules'),
]

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# WhiteNoise caching configuration
# Static files are versioned with hash in filename, so we can cache for maximum time
WHITENOISE_MAX_AGE = 31536000  # 1 year in seconds
# Skip compression for already compressed formats
WHITENOISE_SKIP_COMPRESS_EXTENSIONS = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'zip', 'gz', 'tgz', 'bz2', 'tbz', 'xz', 'br', 'woff', 'woff2']


# ---
# Media files (User uploaded content)
# https://docs.djangoproject.com/en/5.2/topics/files/
# ---
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ---
# CKEditor Configuration
# ---
CKEDITOR_UPLOAD_PATH = 'ckeditor_uploads/'
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_ALLOW_NONIMAGE_FILES = False

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['CodeSnippet'],
            ['SpecialChar', 'HorizontalRule'],
            ['RemoveFormat', 'Source'],
            ['Format'],
        ],
        'format_tags': 'p;h1;h2;h3;h4;h5;h6;pre',
        'height': 500,
        'width': 800,
        'removePlugins': 'elementspath',
        'resize_enabled': True,
        'resize_dir': 'both',
        'resize_minWidth': 450,
        'resize_minHeight': 300,
        'resize_maxWidth': 1800,
        'resize_maxHeight': 1200,
        'extraPlugins': 'codesnippet,sourcearea,resize',
        'codeSnippet_theme': 'monokai_sublime',
        'codeSnippet_languages': {
            'python': 'Python',
            'javascript': 'JavaScript',
            'typescript': 'TypeScript',
            'html': 'HTML',
            'css': 'CSS',
            'scss': 'SCSS',
            'json': 'JSON',
            'xml': 'XML',
            'yaml': 'YAML',
            'bash': 'Bash',
            'sql': 'SQL',
            'java': 'Java',
            'cpp': 'C++',
            'csharp': 'C#',
            'php': 'PHP',
            'ruby': 'Ruby',
            'go': 'Go',
            'rust': 'Rust',
            'swift': 'Swift',
            'kotlin': 'Kotlin',
            'dart': 'Dart',
        },
        # Custom configuration for better embed experience
        'forcePasteAsPlainText': False,
        'autoParagraph': True,
        'enterMode': 1,  # CKEDITOR.ENTER_P
        'shiftEnterMode': 2,  # CKEDITOR.ENTER_BR
        'pasteFromWordRemoveFontStyles': True,
        'pasteFromWordRemoveStyles': True,
        # Enable automatic link detection
        'autolink_commitKeystrokes': [13, 32],  # Enter and Space
        # Ensure source button works
        'allowedContent': True,  # Allow all content in source mode
        'templates_replaceContent': False,
        # Source area configuration for better readability
        'sourceAreaTabSize': 4,
    }
}

# ---
# CKEditor 5 Configuration
# ---
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload'],
        'height': '400px',
    },
    'extends': {
        'toolbar': [
            'heading', '|',
            'bold', 'italic', 'underline', 'strikethrough', '|',
            'link', 'blockQuote', 'code', 'codeBlock', '|',
            'bulletedList', 'numberedList', 'outdent', 'indent', '|',
            'insertImage', 'insertTable', 'mediaEmbed', '|',
            'undo', 'redo', 'sourceEditing'
        ],
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        },
        'image': {
            'toolbar': [
                'imageStyle:inline',
                'imageStyle:block',
                'imageStyle:side',
                '|',
                'toggleImageCaption',
                'imageTextAlternative'
            ]
        },
        'table': {
            'contentToolbar': [
                'tableColumn',
                'tableRow',
                'mergeTableCells',
                'tableCellProperties',
                'tableProperties'
            ]
        },
        'codeBlock': {
            'languages': [
                {'language': 'plaintext', 'label': 'Plain text'},
                {'language': 'html', 'label': 'HTML'},
                {'language': 'css', 'label': 'CSS'},
                {'language': 'javascript', 'label': 'JavaScript'},
                {'language': 'python', 'label': 'Python'},
                {'language': 'php', 'label': 'PHP'},
                {'language': 'bash', 'label': 'Bash'},
                {'language': 'sql', 'label': 'SQL'},
                {'language': 'json', 'label': 'JSON'},
                {'language': 'xml', 'label': 'XML'}
            ]
        },
        'height': '500px',
        'width': '100%',
        'mediaEmbed': {
            'previewsInData': True
        },
        'image': {
            'upload': {
                'types': ['jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff']
            }
        }
    }
}


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ... other settings

# Silencing the specific warning about the static directory not existing.
# This is useful in development/testing environments where the directory
# is created later in the CI/CD pipeline.
SILENCED_SYSTEM_CHECKS = ['staticfiles.W004']

# Authentication settings for DevTracker
LOGIN_URL = '/tracker/login/'
LOGIN_REDIRECT_URL = '/tracker/dashboard/'
# LOGOUT_REDIRECT_URL removed to show the logged_out.html template

# reCAPTCHA settings for DevTracker registration
# Get keys from: https://www.google.com/recaptcha/admin/
RECAPTCHA_PUBLIC_KEY = os.environ.get('RECAPTCHA_PUBLIC_KEY', '')
RECAPTCHA_PRIVATE_KEY = os.environ.get('RECAPTCHA_PRIVATE_KEY', '')
RECAPTCHA_REQUIRED_SCORE = 0.85  # Score threshold for reCAPTCHA v3

# Redis caching configuration
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://redis:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'IGNORE_EXCEPTIONS': True,  # Application works even if Redis is unavailable
            'SOCKET_CONNECT_TIMEOUT': 5,  # seconds
            'SOCKET_TIMEOUT': 5,  # seconds
        },
        'KEY_PREFIX': 'jaroslav_tech',
    }
}

# Cache timeout settings (in seconds)
CACHE_MIDDLEWARE_SECONDS = 300  # 5 minutes for middleware caching
CACHE_MIDDLEWARE_KEY_PREFIX = 'jaroslav_tech_middleware'

# Optional: Cache session data for better performance
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

# Override caching for testing
import sys
if 'test' in sys.argv or 'pytest' in sys.modules:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'test-cache',
        }
    }
